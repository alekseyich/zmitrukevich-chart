name: "Create release"

on:
  workflow_dispatch:
    inputs:
      environment:
        type: choice
        description: "Environment to deploy"
        required: true
        default: "dev"
        options:
          - dev
          - qa
          - uat
          - prf
          - prd
      azure_region:
        type: choice
        description: "Azure regions"
        required: false
        options:
          - westus3
          - eastus
      version:
        description: "version"
        required: true
   

run-name: "Release in env ${{ inputs.environment }} at ${{ inputs.azure_region }}"

jobs:
  RELEASE:
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash

    permissions:
      contents: write

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    # - name: Prepare new version
    #   id: semverout
    #   uses: paulhatch/semantic-version@v5.4.0
    #   with:
    #     bump_each_commit: "false"
    #     debug: "${{ runner.debug == '1' }}"
    
    - name: Set tag
      env:
        GH_TOKEN: ${{ secrets.GH_TOKEN }}
      run: |
        if git tag | grep -q "^${{ inputs.version }}$"; then
          echo "::warning::Tag ${{ inputs.version }} exists."
        else
          git tag ${{ inputs.version }} || true
          git push origin ${{ inputs.version }} || true
        fi

    # - name: Make release tag
    #   env:
    #     GH_TOKEN: ${{ secrets.GH_TOKEN }}
    #   run: |
    #       gh release create ${GITHUB_REF#refs/tags/} \
    #         --title "Release v${GITHUB_REF#refs/tags/}" || true

    # - name: Make release main
    #   if: github.ref == 'refs/heads/main'
    #   env:
    #     GH_TOKEN: ${{ secrets.GH_TOKEN }}
    #   run: |
    #     if gh release view "${{ inputs.version }}" > /dev/null 2>&1; then
    #       echo "::warning::Release ${{ inputs.version }} exists."
    #     else
    #       if ! git tag | grep -q "^${{ inputs.version }}$"; then
    #         git tag ${{ inputs.version }} || true
    #         git push origin ${{ inputs.version }} || true
    #       fi
    #       # gh release create ${{ inputs.version }} \
    #       #   --title "Release v${{ inputs.version }}" || true
    #     fi
        
    # - name: Set version env
      # Use a little bit of bash to extract the tag name from the GitHub ref
      # run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
    - uses: release-drafter/release-drafter@v5
      id: release_notes
      with:
        disable-autolabeler: true
        # Override the Release name/tag/version with the actual tag name
        # name: ${{ env.RELEASE_VERSION }}
        # tag: ${{ inputs.version }}
        # version: ${{ inputs.version }}
        # Publish the Release
        publish: true
      env:
        GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

    - name: Create Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
      with:
        tag_name: ${{ inputs.version }}
        release_name: Release ${{ inputs.version }}
        body: ${{ steps.release_notes.outputs.release_notes }}
        draft: false
        prerelease: false    
